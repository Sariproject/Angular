{"version":3,"file":"store.js","sources":["ng://store/lib/store.service.ts","ng://store/lib/store.component.ts","ng://store/lib/store.module.ts","ng://store/lib/talents-store/talents/talent.actions.ts","ng://store/lib/talents-store/talents/talent.effects.ts","ng://store/lib/talents-store/talents/talent.state.ts","ng://store/lib/talents-store/talents/talent.reducer.ts","ng://store/lib/talents-store/talent-store.module.ts","ng://store/lib/talents-store/talent-store.state.ts","ng://store/lib/talents-store/talents/talent.selectors.ts","ng://store/lib/activity-store/activity/activity.actions.ts","ng://store/lib/activity-store/activity/activity.effects.ts","ng://store/lib/activity-store/activity/activity.state.ts","ng://store/lib/activity-store/activity/activity.reducer.ts","ng://store/lib/activity-store/activity-store.module.ts","ng://store/lib/activity-store/activity-store.state.ts","ng://store/lib/activity-store/activity/activity.selectors.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-store',\n  template: `\n    <p>\n      store works!\n    </p>\n  `,\n  styles: []\n})\nexport class StoreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { StoreComponent } from './store.component';\n\n\n\n@NgModule({\n  declarations: [StoreComponent],\n  imports: [\n  ],\n  exports: [StoreComponent]\n})\nexport class StoreModule { }\n","import { createAction, props } from '@ngrx/store';\r\n\r\n\r\nexport const TalentsActions = {\r\n    \r\n    GetTalentsAction: createAction('[Talents] Get Talents'),\r\n    GetTalentsSuccessAction: createAction('[Talents] Get Talents success', props<{  talents: any[] }>()),\r\n    GetTalentsFailureAction: createAction('[Talents] Get Talents failure', props<{ error: any }>()),\r\n\r\n    AddTalentsAction: createAction('[Talents] Add Talent', props<{ talent }>()),\r\n    AddTalentsSuccessAction: createAction('[Talents] Add Talent Success', props<{ isAdded}>()),\r\n    AddTalentsFailureAction: createAction('[Talents] Add Talent Failure', props<{ error: any }>()),\r\n\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { AdminsService} from 'api';\r\nimport { of } from 'rxjs';\r\nimport { filter, tap, exhaustMap, map, catchError } from 'rxjs/operators';\r\nimport { TalentsActions } from './talent.actions';\r\n\r\n@Injectable()\r\nexport class TalentsEffects {\r\n\r\n  getTalents$ = createEffect(() => this.actions$.pipe(\r\n    ofType(TalentsActions.GetTalentsAction),\r\n    tap((action)=>console.log('ZZZZZZZZZZZZZZZZZZ',{action})),\r\n    exhaustMap( _ => this.AdminService.getTalents$().pipe(\r\n        map(talents => TalentsActions.GetTalentsSuccessAction({ talents })),\r\n        catchError(error => of(TalentsActions.GetTalentsFailureAction({ error }))\r\n        )),\r\n\r\n    )\r\n));\r\n\r\naddTalent$ = createEffect(() => this.actions$.pipe(\r\n  ofType(TalentsActions.AddTalentsAction),\r\n  exhaustMap( ({talent})  => this.AdminService.addNewTalent$(talent).pipe(                   \r\n     map( isAdded => TalentsActions.AddTalentsSuccessAction({ isAdded })),\r\n     catchError(error => of(TalentsActions.AddTalentsFailureAction({ error }))\r\n     )),\r\n )\r\n));\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private AdminService: AdminsService,\r\n  ) { }\r\n}","\r\n\r\nexport class TalentsState {\r\n  \r\n  talents: any[] =[];\r\n\r\n}","import { Action, createReducer, on } from '@ngrx/store';\r\nimport { TalentsActions } from './talent.actions';\r\nimport { TalentsState } from './talent.state';\r\n\r\nconst reducer = createReducer(\r\n    new TalentsState(),\r\n    on(TalentsActions.GetTalentsSuccessAction, (state, { talents }) => ({ ...state, talents })),\r\n    on(TalentsActions.AddTalentsSuccessAction, (state, { isAdded}) => ({ ...state, isAdded })),\r\n  )\r\n\r\n  export function TalentsReducer(state: TalentsState | undefined, action: Action) {\r\n    return reducer(state, action);\r\n  }\r\n","import { NgModule} from '@angular/core';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { TalentsEffects } from './talents/talent.effects';\r\nimport { TalentsReducer } from './talents/talent.reducer';\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n      StoreModule.forFeature('talents', TalentsReducer),\r\n      EffectsModule.forFeature([TalentsEffects])\r\n    ],\r\n    exports: [StoreModule,EffectsModule]\r\n  })\r\n  export class TalentStoreModule  {\r\n  }\r\n\r\n","import { TalentsState } from \"./talents/talent.state\";\r\n\r\nexport interface TalentStoreState {\r\n  talents: TalentsState;\r\n  }\r\n","import { createFeatureSelector, createSelector, MemoizedSelector } from '@ngrx/store';\r\n\r\nimport { TalentsState } from './talent.state';\r\n\r\n\r\nconst talentsFeatureSelector: MemoizedSelector<object, TalentsState> =\r\n   createFeatureSelector<TalentsState>('talents');\r\n                  \r\nexport const talentsSelector: MemoizedSelector<object, any[]> =\r\n  createSelector(talentsFeatureSelector, ({ talents }) => talents);\r\n                  ","import { createAction, props } from '@ngrx/store';\r\n\r\n\r\nexport const ActivityActions = {\r\n    \r\n    GetActivityAction: createAction('[Activity] Get Activity'),\r\n    GetActivitySuccessAction: createAction('[Activity] Get Activity success', props<{  Activity: any[] }>()),\r\n    GetActivityFailureAction: createAction('[Activity] Get Activity failure', props<{ error: any }>()),\r\n\r\n    AddActivityAction: createAction('[Activity] Add Activity', props<{ activity }>()),\r\n    AddActivitySuccessAction: createAction('[Activity] Add Activity Success', props<{ isAdded}>()),\r\n    AddActivityFailureAction: createAction('[Activity] Add Activity Failure', props<{ error: any }>()),\r\n\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { AdminsService } from 'api';\r\nimport { of } from 'rxjs';\r\nimport { filter, tap, exhaustMap, map, catchError } from 'rxjs/operators';\r\nimport { ActivityActions } from './activity.actions';\r\n\r\n@Injectable()\r\nexport class ActivityEffects {\r\n\r\n  getActivity$ = createEffect(() => this.actions$.pipe(\r\n    ofType(ActivityActions.GetActivityAction),\r\n    tap((action) => console.log('0000', { action })),\r\n    exhaustMap(_ => this.AdminService.getActivity$().pipe(\r\n      map(Activity => ActivityActions.GetActivitySuccessAction({ Activity })),\r\n      catchError(error => of(ActivityActions.GetActivityFailureAction({ error }))\r\n      )),\r\n\r\n    )\r\n  ));\r\n\r\n  addActivity$ = createEffect(() => this.actions$.pipe(\r\n    ofType(ActivityActions.AddActivityAction),\r\n    exhaustMap(({ activity }) => this.AdminService.addNewActivity$(activity).pipe(\r\n      map(isAdded => ActivityActions.AddActivitySuccessAction({ isAdded })),\r\n      catchError(error => of(ActivityActions.AddActivityFailureAction({ error }))\r\n      )),\r\n    )\r\n  ));\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private AdminService: AdminsService,\r\n  ) { }\r\n}","\r\n\r\nexport class ActivityState {\r\n  \r\n  Activity: any[] =[];\r\n\r\n}","import { Action, createReducer, on } from '@ngrx/store';\r\nimport { ActivityActions } from './activity.actions';\r\nimport { ActivityState} from './activity.state';\r\n\r\nconst reducer = createReducer(\r\n    new ActivityState(),\r\n    on(ActivityActions.GetActivitySuccessAction, (state, { Activity }) => ({ ...state, Activity })),\r\n    on(ActivityActions.AddActivitySuccessAction, (state, { isAdded }) => ({ ...state, isAdded })),\r\n  )\r\n\r\n  export function ActivityReducer(state: ActivityState | undefined, action: Action) {\r\n    return reducer(state, action);\r\n  }\r\n","import { NgModule} from '@angular/core';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { ActivityEffects } from './activity/activity.effects';\r\nimport { ActivityReducer } from './activity/activity.reducer';\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n      StoreModule.forFeature('Activity', ActivityReducer),\r\n      EffectsModule.forFeature([ActivityEffects])\r\n    ],\r\n    exports: [StoreModule,EffectsModule]\r\n  })\r\n  export class ActivityStoreModule  {\r\n  }\r\n\r\n","import { ActivityState } from \"./activity/activity.state\";\r\n\r\nexport interface ActivityStoreState {\r\n  Activity: ActivityState;\r\n  }\r\n","import { createFeatureSelector, createSelector, MemoizedSelector } from '@ngrx/store';\r\n\r\nimport { ActivityState } from './activity.state';\r\n\r\n\r\nconst ActivityFeatureSelector: MemoizedSelector<object, ActivityState> =\r\n   createFeatureSelector<ActivityState>('Activity');\r\n                  \r\nexport const ActivitySelector: MemoizedSelector<object, any[]> =\r\n  createSelector(ActivityFeatureSelector, ({  Activity }) =>  Activity);\r\n                  "],"names":["StoreModule","reducer"],"mappings":"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"}